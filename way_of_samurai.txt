import tkinter as tk
import sqlite3
import matplotlib.pyplot as plt


class SamuraiTracker:
    def __init__(self, root):
        self.root = root
        self.root.title("üî• –®–ª—è—Ö —Å–∞–º—É—Ä–∞—è: –±–∞–ª–∞–Ω—Å —Ä–æ–∑—É–º—É —ñ —Ç—ñ–ª–∞")
        self.root.configure(bg="#3C3C3C")

        self.db_init()

        tk.Label(root, text="üñ• –ß–∞—Å –∑–∞ –ü–ö (–≥–æ–¥):", fg="white", bg="#3C3C3C", font=("Courier", 12)).pack()
        self.pc_input = tk.Entry(root)
        self.pc_input.pack()

        tk.Label(root, text="‚öî –ß–∞—Å —Å–ø–æ—Ä—Ç—É (–≥–æ–¥):", fg="white", bg="#3C3C3C", font=("Courier", 12)).pack()
        self.sport_input = tk.Entry(root)
        self.sport_input.pack()

        tk.Button(root, text="–ó–∞–ø–∏—Å–∞—Ç–∏ —à–ª—è—Ö", command=self.update_data, fg="white", bg="#8B0000").pack()
        tk.Button(root, text="–ü–æ–∫–∞–∑–∞—Ç–∏ –±–∞–ª–∞–Ω—Å", command=self.show_balance, fg="white", bg="#8B0000").pack()

        tk.Label(root, text="üèØ –¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –≤–æ—ó–Ω–∞", fg="white", bg="#3C3C3C", font=("Courier", 12)).pack()
        self.exercises = {"–ü—ñ–¥—Ç—è–≥—É–≤–∞–Ω–Ω—è": 0, "–í—ñ–¥–∂–∏–º–∞–Ω–Ω—è": 0, "–ü—Ä–µ—Å": 0, "–ü—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è": 0}
        self.exercise_entries = {}

        for exercise in self.exercises:
            tk.Label(root, text=f"‚öî {exercise}", fg="white", bg="#3C3C3C").pack()
            entry = tk.Entry(root)
            entry.pack()
            self.exercise_entries[exercise] = entry

        tk.Button(root, text="–ó–±–µ—Ä–µ–≥—Ç–∏ –≤–ø—Ä–∞–≤–∏", command=self.save_exercises, fg="white", bg="#8B0000").pack()
        tk.Button(root, text="–ì—Ä–∞—Ñ—ñ–∫ –ø—Ä–æ–≥—Ä–µ—Å—É", command=self.show_progress, fg="white", bg="#8B0000").pack()

    def db_init(self):
        self.conn = sqlite3.connect("samurai_progress.db")
        self.cursor = self.conn.cursor()
        self.cursor.execute("""
            CREATE TABLE IF NOT EXISTS progress (
                id INTEGER PRIMARY KEY,
                pc_time INTEGER,
                sport_time INTEGER,
                pullups INTEGER,
                pushups INTEGER,
                abs INTEGER,
                squats INTEGER
            )
        """)
        self.conn.commit()

    def update_data(self):
        pc_hours = int(self.pc_input.get())
        sport_hours = int(self.sport_input.get())
        self.cursor.execute("INSERT INTO progress (pc_time, sport_time) VALUES (?, ?)", (pc_hours, sport_hours))
        self.conn.commit()
        self.pc_input.delete(0, tk.END)
        self.sport_input.delete(0, tk.END)

    def save_exercises(self):
        values = [int(entry.get()) for entry in self.exercise_entries.values()]
        self.cursor.execute("""
            INSERT INTO progress (pullups, pushups, abs, squats)
            VALUES (?, ?, ?, ?)
        """, values)
        self.conn.commit()
        for entry in self.exercise_entries.values():
            entry.delete(0, tk.END)

    def show_balance(self):
        self.cursor.execute("SELECT SUM(pc_time), SUM(sport_time) FROM progress")
        pc_time, sport_time = self.cursor.fetchone()

        labels = ["–ö–æ–º–ø'—é—Ç–µ—Ä", "–°–ø–æ—Ä—Ç"]
        times = [pc_time or 0, sport_time or 0]
        plt.bar(labels, times, color=['red', 'green'])
        plt.ylabel("–ì–æ–¥–∏–Ω–∏")
        plt.title("üî• –ë–∞–ª–∞–Ω—Å –µ–Ω–µ—Ä–≥—ñ—ó —Å–∞–º—É—Ä–∞—è")
        plt.show()

    def show_progress(self):
        self.cursor.execute("SELECT SUM(pullups), SUM(pushups), SUM(abs), SUM(squats) FROM progress")
        values = self.cursor.fetchone()
        labels = ["–ü—ñ–¥—Ç—è–≥—É–≤–∞–Ω–Ω—è", "–í—ñ–¥–∂–∏–º–∞–Ω–Ω—è", "–ü—Ä–µ—Å", "–ü—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è"]

        plt.bar(labels, values, color=['blue', 'orange', 'green', 'purple'])
        plt.ylabel("–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω—å")
        plt.title("‚öî –ü—Ä–æ–≥—Ä–µ—Å —É —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è—Ö")
        plt.show()


root = tk.Tk()
app = SamuraiTracker(root)
root.mainloop()
