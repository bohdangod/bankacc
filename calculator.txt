import sys
import cv2
import pytesseract
import speech_recognition as sr
from PyQt6.QtWidgets import QApplication, QWidget, QVBoxLayout, QPushButton, QLineEdit, QLabel

pytesseract.pytesseract.tesseract_cmd = r'C:\Program Files\Tesseract-OCR\tesseract.exe'  # –®–ª—è—Ö –¥–æ Tesseract

class SamuraiCalculator(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–°–∞–º—É—Ä–∞–π—Å—å–∫–∏–π –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä")
        self.setStyleSheet("background-color: black; color: white; font-size: 18px;")

        self.layout = QVBoxLayout()

        self.label = QLabel("–í–≤–µ–¥–∏ –≤–∏—Ä–∞–∑ –∞–±–æ —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—É–π –π–æ–≥–æ:")
        self.layout.addWidget(self.label)

        self.input_field = QLineEdit()
        self.layout.addWidget(self.input_field)

        self.calculate_button = QPushButton("‚öîÔ∏è –û–±—á–∏—Å–ª–∏—Ç–∏")
        self.calculate_button.clicked.connect(self.calculate)
        self.layout.addWidget(self.calculate_button)

        self.camera_button = QPushButton("üì∏ –†–æ–∑–ø—ñ–∑–Ω–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è")
        self.camera_button.clicked.connect(self.capture_and_recognize)
        self.layout.addWidget(self.camera_button)

        self.voice_button = QPushButton("üó£Ô∏è –ì–æ–ª–æ—Å–æ–≤–µ –≤–≤–µ–¥–µ–Ω–Ω—è")
        self.voice_button.clicked.connect(self.voice_input)
        self.layout.addWidget(self.voice_button)

        self.result_label = QLabel("")
        self.layout.addWidget(self.result_label)

        self.setLayout(self.layout)

    def calculate(self):
        try:
            expression = self.input_field.text()
            result = eval(expression)
            self.result_label.setText(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        except Exception as e:
            self.result_label.setText(f"–ü–æ–º–∏–ª–∫–∞: {e}")

    def capture_and_recognize(self):
        cap = cv2.VideoCapture(0)
        ret, frame = cap.read()
        cap.release()

        if ret:
            gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
            text = pytesseract.image_to_string(gray, config='digits')
            self.input_field.setText(text)
            self.calculate()

    def voice_input(self):
        recognizer = sr.Recognizer()
        with sr.Microphone() as source:
            self.result_label.setText("üéôÔ∏è –ì–æ–≤–æ—Ä–∏...")
            recognizer.adjust_for_ambient_noise(source)
            audio = recognizer.listen(source)

        try:
            text = recognizer.recognize_google(audio, language="uk-UA")
            self.input_field.setText(text)
            self.calculate()
        except sr.UnknownValueError:
            self.result_label.setText("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–ø—ñ–∑–Ω–∞—Ç–∏ –≥–æ–ª–æ—Å!")
        except sr.RequestError:
            self.result_label.setText("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤—ñ—Å—É —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è!")

if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = SamuraiCalculator()
    window.show()
    sys.exit(app.exec())